Paradox of Choice (Barry Schwartz)
=======

1. Simplicity
    Only 25 keywords
    1. No classes (only structs and functions)
    2. no inheritance (only composition)
    3. no access modifiers (public, private, protected)
    4. no exceptions (only errors)
    5. Pointers are supported but no pointer arithmetic
    6. Value by default
    . Only one looping construct - for loop - that can be used in differnt ways

2. Performance

3. Built for concurrency
    go, chan (data type), <- (channel operator), built-in scheduler


To run the go program
 go run 01-hello-world.go

To create a build
    go build 01-hello-world.go
    go  build -o hw 01-hello-world.go

Data Types
    string
    bool

    int 
    int8
    int16
    int32
    int64

    uint
    uint8
    uint16
    uint32
    uint64

    float32
    float64

    complex64 (real [float32] + imaginary[float32])
    complex128 (real [float64] + imaginary[float64])

    byte (alias for uint8)
    rune (alias for int32) (represents a unicode code point)

    There is no character type, just use rune instead

Paradox of Choice (Barry Schwartz)
